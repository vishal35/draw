{"ast":null,"code":"var _jsxFileName = \"D:\\\\test_react\\\\src\\\\Sidebar.js\";\nimport React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport clsx from 'clsx';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Divider from '@material-ui/core/Divider';\nimport routesData from './routes';\n\nconst handleReq = () => {\n  console.log(\"yes\");\n};\n\nexport default function Sidebar(props) {\n  const handlePath = path => {\n    console.log(path);\n  };\n\n  const {\n    classes,\n    open,\n    theme,\n    handleDrawerClose\n  } = props;\n  return /*#__PURE__*/React.createElement(Drawer, {\n    variant: \"permanent\",\n    className: clsx(classes.drawer, {\n      [classes.drawerOpen]: open,\n      [classes.drawerClose]: !open\n    }),\n    classes: {\n      paper: clsx({\n        [classes.drawerOpen]: open,\n        [classes.drawerClose]: !open\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleDrawerClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, theme.direction === 'rtl' ? /*#__PURE__*/React.createElement(ChevronRightIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 40\n    }\n  }) : /*#__PURE__*/React.createElement(ChevronLeftIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 63\n    }\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, routesData.map((text, index) => /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: text,\n    onClick: handlePath(text.path),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, index % 2 === 0 ? /*#__PURE__*/React.createElement(InboxIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 46\n    }\n  }) : /*#__PURE__*/React.createElement(MailIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 62\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: text.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleReq,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"aaaaaaaaa\"));\n}","map":{"version":3,"sources":["D:/test_react/src/Sidebar.js"],"names":["React","Drawer","clsx","IconButton","ChevronLeftIcon","ChevronRightIcon","List","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","Divider","routesData","handleReq","console","log","Sidebar","props","handlePath","path","classes","open","theme","handleDrawerClose","drawer","drawerOpen","drawerClose","paper","toolbar","direction","map","text","index","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport clsx from 'clsx';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Divider from '@material-ui/core/Divider';\nimport routesData from './routes'\n\nconst handleReq = () =>{\n  console.log(\"yes\");\n}\nexport default function Sidebar(props) {\n  const handlePath = (path) => {\n    console.log(path);\n  }\n  const {classes, open, theme, handleDrawerClose}=props\n  return (\n    <Drawer\n      variant=\"permanent\"\n      className={clsx(classes.drawer, {\n        [classes.drawerOpen]: open,\n        [classes.drawerClose]: !open,\n      })}\n      classes={{\n        paper: clsx({\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        }),\n      }}\n    >\n      <div className={classes.toolbar}>\n        <IconButton onClick={handleDrawerClose}>\n          {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n        </IconButton>\n      </div>\n      <Divider />\n      <List>\n        {routesData.map((text, index) => (\n          <ListItem button key={text} onClick={handlePath(text.path)}>\n          {/* <a href={text.path} key={index}> */}\n            {/* ListItem=> onClick={clickHandle(text.path)} \n          const  clickHandle = () =>{\n          history.push('/path')\n          } \n            */}\n            \n              \n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text.name} />\n          {/* </a> */}\n          </ListItem>\n        ))}\n      </List>\n      <button onClick={handleReq}>aaaaaaaaa</button>\n    </Drawer>\n  );\n}"]},"metadata":{},"sourceType":"module"}